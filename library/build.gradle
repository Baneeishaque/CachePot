apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
// apply plugin: 'signing'

android {
  compileSdkVersion COMPILE_SDK_VERSION as int

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION as int
    targetSdkVersion TARGET_SDK_VERSION as int

    versionCode VERSION_CODE as int
    versionName VERSION_NAME

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })

  implementation "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
  testImplementation "junit:junit:${JUNIT_VERSION}"
  testImplementation 'org.mockito:mockito-all:1.10.19'
  testImplementation "org.hamcrest:hamcrest-all:1.3"
}

// group = GROUP
// version = VERSION_NAME

// task sourcesJar(type: Jar) {
//     from sourceSets.main.allJava
//     classifier = 'sources'
// }

// task javadocJar(type: Jar) {
//     from javadoc
//     classifier = 'javadoc'
// }

afterEvaluate{
    publishing {
        publications {
            release(MavenPublication){
                from components.release

                groupId = GROUP
                artifactId = ARTIFACT_ID
                version = VERSION_NAME
            }
        }
    }
}

// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             artifactId = ARTIFACT_ID
//             from components.java
//             artifact sourcesJar
//             artifact javadocJar
//             pom {
//                 name = UPLOAD_NAME
//                 description = POM_DESCRIPTION
//                 url = POM_URL
//                 licenses {
//                     license {
//                         name = POM_LICENCE_NAME
//                         url = POM_LICENCE_URL
//                         distribution = POM_LICENCE_DIST
//                     }
//                 }
//                 developers {
//                     developer {
//                         id = POM_DEVELOPER_ID
//                         name = POM_DEVELOPER_NAME
//                         email = POM_DEVELOPER_EMAIL
//                         url = POM_DEVELOPER_URL
//                     }
//                 }
//                 scm {
//                     connection = POM_SCM_CONNECTION
//                     developerConnection = POM_SCM_DEV_CONNECTION
//                     url = POM_SCM_URL
//                 }
//                 issueManagement {
//                   url = ISSUE_URL
//                 }
//             }
//         }
//     }
// }

// signing {
//     sign publishing.publications.mavenJava
// }

// javadoc {
//     if(JavaVersion.current().isJava9Compatible()) {
//         options.addBooleanOption('html4', true)
//     }
// }
